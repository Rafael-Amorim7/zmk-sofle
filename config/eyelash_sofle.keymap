#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE     &kp N1       &kp N2        &kp N3        &kp N4  &kp N5       &msc SCRL_UP     &kp N6     &kp N7  &kp N8         &kp N9         &kp N0                   &kp BACKSPACE
&kp TAB       &kp Q        &kp W         &kp E         &kp R   &kp T        &msc SCRL_DOWN   &kp Y      &kp U   &kp I          &kp O          &kp P                    &kp BSLH
&kp CAPSLOCK  &kp A        &kp S         &kp D         &kp F   &kp G        &msc SCRL_LEFT   &kp H      &kp J   &kp K          &kp L          &kp SEMI                 &kp APOS
&kp LSHFT     &mt LCTRL Z  &kp X         &kp C         &kp V   &kp B        &msc SCRL_RIGHT  &kp N      &kp M   &kp COMMA      &kp DOT        &mt RIGHT_CONTROL SLASH  &kp RIGHT_SHIFT
&kp C_MUTE    &kp LCTRL    &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &mkp LCLK        &kp ENTER  &mo 2   &kp RIGHT_ALT  &kp RIGHT_GUI  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp F1     &kp F2         &kp F3     &kp F4     &kp F5          &mmv MOVE_UP     &kp F6           &kp F7          &kp F8        &kp F9     &kp F10           &kp DEL
&trans      &trans     &kp LC(RIGHT)  &trans     &trans     &trans          &mmv MOVE_DOWN   &kp PG_UP        &kp PG_DN       &kp HOME      &kp END    &kp UNDERSCORE    &kp PLUS
&trans      &trans     &trans         &trans     &trans     &kp ESC         &mmv MOVE_LEFT   &kp LEFT         &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &kp LC(Z)  &kp LC(X)      &kp LC(C)  &kp LC(V)  &kp LC(LEFT)    &mmv MOVE_RIGHT  &kp PRINTSCREEN  &kp INSERT      &trans        &kp F11    &kp F12           &trans
&kp C_MUTE  &trans     &trans         &trans     &trans     &trans          &mkp RCLK        &trans           &trans          &trans        &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6        &kp F7        &kp F8      &kp F9         &kp F10    &trans
&trans    &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans          &mmv MOVE_DOWN   &kp LG(F4)    &trans        &trans      &trans         &kp MINUS  &kp EQUAL
&trans    &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans          &mmv MOVE_LEFT   &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &kp LBRC   &kp RBRC
&trans    &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans          &mmv MOVE_RIGHT  &trans        &trans        &trans      &kp F11        &kp F12    &trans
&kp C_PP  &trans        &kp NUMBER_0  &trans        &mo 3         &trans          &mkp MCLK        &trans        &trans        &trans      &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };

        layer_3 {
            bindings = <
&trans  &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans  &trans  &trans  &trans
&trans  &bt BT_CLR       &bt BT_CLR_ALL  &trans           &trans           &trans             &trans  &trans           &trans           &trans  &trans  &trans  &trans
&trans  &out OUT_USB     &out OUT_BLE    &sys_reset       &bootloader      &soft_off          &trans  &trans           &trans           &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans  &trans  &trans
&trans  &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans  &trans  &trans
            >;
        };
    };
};
